name: Release DEB for Linux Mint

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:

    runs-on: ubuntu-latest
    container:
      image: linuxmintd/mint21.1-amd64:latest
    steps:
    - uses: actions/checkout@v3
      with:
        path: xviewer-plugin-catin136
    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y \
          debhelper \
          dh-make \
          xviewer-dev \
          libexif-dev \
          libpeas-dev \
          libcinnamon-desktop-dev \
          dh-python \
          gsettings-desktop-schemas-dev \
          libexempi-dev \
          liblcms2-dev \
          libxapp-dev \
          librsvg2-dev \
          python3-all \
          cmake
    - name: Build DEB file
      working-directory: xviewer-plugin-catin136
      run: |
        dh_auto_configure --buildsystem=meson
        dpkg-buildpackage -rfakeroot -us -uc -b

    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    # Since Github actions (currently) doesn't provide a slugged version of the git tag we have to
    # create it by ourselves. It is then made available to other steps in this job as a step.outputs
    # variable
    - name: Get the version (git tag)
      id: get_version
      run: |
        echo ${GITHUB_REF/refs\/tags\/v/}
        echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
    - name: Upload a DEB Package to the Release Assets
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: xviewer-plugins-catin136_${{ steps.get_version.outputs.VERSION }}_amd64.deb
        asset_name: xviewer-plugins-catin136_${{ steps.get_version.outputs.VERSION }}_amd64.deb
        asset_content_type: application/vnd.debian.binary-package
